apply plugin: 'com.android.application'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "com.mypopsy.floatingsearchview.demo"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "PROJECT_URL", '"https://github.com/renaudcerrato/FloatingSearchView"'
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':library')
    // Support
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:design:$support_library_version"
    // ToggleDrawable
    implementation 'com.github.renaudcerrato:ToggleDrawable:1.0.1'
    // Retrofit
    implementation 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    implementation 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    implementation 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    implementation 'com.squareup.okhttp:logging-interceptor:2.7.0'
    // RxJava
    implementation 'io.reactivex:rxandroid:1.1.0'
    // Dagger
    implementation 'com.google.dagger:dagger:2.0.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'
}

afterEvaluate { project ->
    android.applicationVariants.each { variant ->

        Task copyApk = task(("release" + variant.variantData.name.capitalize()), type: Copy) {
            from variant.outputs[0].outputFile
            destinationDir project.projectDir
            dependsOn variant.assemble
        }

        variant.assemble.finalizedBy(copyApk)
    }
}
